-- Fix the EXECUTE_QUERY_PLAN procedure
USE DATABASE CLAUDE_BI;
USE SCHEMA MCP;

CREATE OR REPLACE PROCEDURE EXECUTE_QUERY_PLAN(plan VARIANT)
RETURNS TABLE()
LANGUAGE SQL
EXECUTE AS CALLER
AS
DECLARE
  source STRING;
  top_n INTEGER;
  sql_text STRING;
BEGIN
  -- Get parameters
  source := plan:source::STRING;
  top_n := COALESCE(plan:top_n::INTEGER, 100);
  
  -- Build SQL based on source
  IF (source = 'VW_ACTIVITY_SUMMARY') THEN
    sql_text := 'SELECT * FROM CLAUDE_BI.ACTIVITY_CCODE.VW_ACTIVITY_SUMMARY';
  ELSEIF (source = 'VW_ACTIVITY_COUNTS_24H') THEN
    sql_text := 'SELECT * FROM CLAUDE_BI.ACTIVITY_CCODE.VW_ACTIVITY_COUNTS_24H LIMIT ' || top_n::STRING;
  ELSEIF (source = 'EVENTS') THEN
    sql_text := 'SELECT * FROM CLAUDE_BI.ACTIVITY.EVENTS ORDER BY TS DESC LIMIT ' || top_n::STRING;
  ELSE
    RETURN TABLE(SELECT 'Unknown source: ' || source AS ERROR);
  END IF;
  
  -- Execute and return results
  RETURN TABLE(EXECUTE IMMEDIATE :sql_text);
END;

-- Grant permissions
GRANT USAGE ON PROCEDURE CLAUDE_BI.MCP.EXECUTE_QUERY_PLAN(VARIANT) TO ROLE CLAUDE_BI_ROLE;

-- Test it
CALL CLAUDE_BI.MCP.EXECUTE_QUERY_PLAN(PARSE_JSON('{"source": "VW_ACTIVITY_SUMMARY", "top_n": 5}'));